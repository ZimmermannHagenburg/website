# This workflow will build the website with pelican and publish (deploy) it to a webserver

name: Publish website

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      # will checkout the website repository as the default action

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pelican markdown

    - name: Checkout medvets-theme
      uses: actions/checkout@v2
      with:
        repository: 'medvets/medvets-theme'
     
    - name: Checkout hierarchy plugin (from Samuels fork of pelican-plugins)
      uses: actions/checkout@v2
      with:
        repository: 'samueljohn/pelican-plugins'
        
    - name: Build website
      id: build
      run: |
        ls
        pelican -s website/pelicanconf.py -v -D 

    - name: Sync files to web server
      id: deploy
      # You may pin to the exact commit or the version.
      # uses: Pendect/action-rsyncer@2554a1e574cf229fb144f23ea5971dbdca8ae8e3
      uses: Pendect/action-rsyncer@v1.1.0
      env:
        # Generate like so:
        # ssh-keygen -f ~/.ssh/deploy_key_rsa -q -P "" 
        # cat ~/.ssh/deploy_key_rsa.pub
        DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}
      with:
        # Rsync flags
        flags: # default is -avzr --delete
        # Local folder to be synced
        src: 'html/'
        # Remote server and path. i.e user@server.com:/var/www/server.com/
        dest: 'medvets@vanness.uberspace.de:~/html'
        
    
    - name: Display status from deploy
      run: echo "${{ steps.build.outputs.status }} ${{ steps.deploy.outputs.status }}"
